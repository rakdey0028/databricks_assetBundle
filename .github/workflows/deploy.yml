name: Deploy to Production

on:
  push:
    branches:
      - main  # Only trigger on pushes to main branch (after PR merge)

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    environment: production  # Fixed production environment
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full commit history

      - name: Verify merge commit
        run: |
          # Check if this is a merge commit (has two parent commits)
          if [ "$(git show -s --format=%p HEAD | wc -w)" -ne 2 ]; then
            echo "::error::Deployments only allowed after PR merges"
            exit 1
          fi
      - name: Install Databricks CLI
        uses: databricks/setup-cli@main
      - name: Configure Databricks CLI
        env:
            DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
            DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
            # Clean host URL (remove trailing slash)
            CLEAN_HOST="${DATABRICKS_HOST%/}"
    
            # Configure CLI using proper argument syntax
              echo "Creating config file backup..."
            mkdir -p ~/.databricks
            cat > ~/.databrickscfg <<EOL
            [DEFAULT]
            host = ${DATABRICKS_HOST%/}
            token = $DATABRICKS_TOKEN
            EOL

      - name: Validate bundle
        run: databricks bundle validate
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: prod

      - name: Deploy to Production
        run: databricks bundle deploy -t prod
        working-directory: .
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: prod


      - name: Verify deployment
        run: databricks bundle resources -t prod
        working-directory: .
        env:
         DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: prod

